{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\DSW_EXTRA\\\\frontend\\\\src\\\\components\\\\NoteForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axiosConfig';\nimport '../styles/NoteForm.css'; // Asegúrate de tener los estilos necesarios\n\nfunction NoteForm({\n  onNoteAdded\n}) {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [items, setItems] = useState(['']);\n  const [images, setImages] = useState(['']);\n  const [collections, setCollections] = useState([]);\n  const [selectedCollection, setSelectedCollection] = useState('');\n  useEffect(() => {\n    // Obtener las colecciones al cargar el componente\n    fetchCollections();\n  }, []);\n  const fetchCollections = async () => {\n    try {\n      const response = await axios.get('/collections');\n      setCollections(response.data);\n    } catch (error) {\n      console.error('Error fetching collections:', error);\n    }\n  };\n  const handleAddItem = () => {\n    setItems([...items, '']);\n  };\n  const handleItemChange = (index, value) => {\n    const newItems = [...items];\n    newItems[index] = value;\n    setItems(newItems);\n  };\n  const handleAddImage = () => {\n    setImages([...images, '']);\n  };\n  const handleImageChange = (index, value) => {\n    const newImages = [...images];\n    newImages[index] = value;\n    setImages(newImages);\n  };\n  const handleCollectionChange = event => {\n    setSelectedCollection(event.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/notes', {\n        title,\n        content,\n        items: items.filter(item => item.trim() !== ''),\n        images: images.filter(image => image.trim() !== ''),\n        collection: selectedCollection // Agregar la colección seleccionada al crear la nota\n      });\n      console.log('Note created:', response.data);\n      onNoteAdded(response.data); // Llama a la callback con la nueva nota\n      // Reset form after submission\n      setTitle('');\n      setContent('');\n      setItems(['']);\n      setImages(['']);\n      setSelectedCollection(''); // Limpiar la colección seleccionada después de crear la nota\n    } catch (error) {\n      console.error('Error creating note:', error.response.data);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"note-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Tittle\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    className: \"form-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Content\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    className: \"form-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), items.map((item, index) => /*#__PURE__*/React.createElement(\"input\", {\n    key: index,\n    type: \"text\",\n    placeholder: \"Item\",\n    value: item,\n    onChange: e => handleItemChange(index, e.target.value),\n    className: \"form-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddItem,\n    className: \"form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Add Item\"), images.map((image, index) => /*#__PURE__*/React.createElement(\"input\", {\n    key: index,\n    type: \"text\",\n    placeholder: \"Image URL\",\n    value: image,\n    onChange: e => handleImageChange(index, e.target.value),\n    className: \"form-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddImage,\n    className: \"form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Add Image\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedCollection,\n    onChange: handleCollectionChange,\n    className: \"form-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Select Collection\"), collections.map(collection => /*#__PURE__*/React.createElement(\"option\", {\n    key: collection._id,\n    value: collection._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, collection.name))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"note-save-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Save Note\"));\n}\nexport default NoteForm;","map":{"version":3,"names":["React","useState","useEffect","axios","NoteForm","onNoteAdded","title","setTitle","content","setContent","items","setItems","images","setImages","collections","setCollections","selectedCollection","setSelectedCollection","fetchCollections","response","get","data","error","console","handleAddItem","handleItemChange","index","value","newItems","handleAddImage","handleImageChange","newImages","handleCollectionChange","event","target","handleSubmit","e","preventDefault","post","filter","item","trim","image","collection","log","createElement","className","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","map","key","onClick","_id","name"],"sources":["C:/Users/victo/Documents/GitHub/DSW_EXTRA/frontend/src/components/NoteForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../axiosConfig';\r\nimport '../styles/NoteForm.css'; // Asegúrate de tener los estilos necesarios\r\n\r\nfunction NoteForm({ onNoteAdded }) {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [items, setItems] = useState(['']);\r\n    const [images, setImages] = useState(['']);\r\n    const [collections, setCollections] = useState([]);\r\n    const [selectedCollection, setSelectedCollection] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Obtener las colecciones al cargar el componente\r\n        fetchCollections();\r\n    }, []);\r\n\r\n    const fetchCollections = async () => {\r\n        try {\r\n            const response = await axios.get('/collections');\r\n            setCollections(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching collections:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddItem = () => {\r\n        setItems([...items, '']);\r\n    };\r\n\r\n    const handleItemChange = (index, value) => {\r\n        const newItems = [...items];\r\n        newItems[index] = value;\r\n        setItems(newItems);\r\n    };\r\n\r\n    const handleAddImage = () => {\r\n        setImages([...images, '']);\r\n    };\r\n\r\n    const handleImageChange = (index, value) => {\r\n        const newImages = [...images];\r\n        newImages[index] = value;\r\n        setImages(newImages);\r\n    };\r\n\r\n    const handleCollectionChange = (event) => {\r\n        setSelectedCollection(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/notes', {\r\n                title,\r\n                content,\r\n                items: items.filter(item => item.trim() !== ''),\r\n                images: images.filter(image => image.trim() !== ''),\r\n                collection: selectedCollection // Agregar la colección seleccionada al crear la nota\r\n            });\r\n            console.log('Note created:', response.data);\r\n            onNoteAdded(response.data); // Llama a la callback con la nueva nota\r\n            // Reset form after submission\r\n            setTitle('');\r\n            setContent('');\r\n            setItems(['']);\r\n            setImages(['']);\r\n            setSelectedCollection(''); // Limpiar la colección seleccionada después de crear la nota\r\n        } catch (error) {\r\n            console.error('Error creating note:', error.response.data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"note-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Tittle\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                className=\"form-input\"\r\n                required\r\n            />\r\n            <textarea\r\n                placeholder=\"Content\"\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                className=\"form-input\"\r\n                required\r\n            />\r\n            {items.map((item, index) => (\r\n                <input\r\n                    key={index}\r\n                    type=\"text\"\r\n                    placeholder=\"Item\"\r\n                    value={item}\r\n                    onChange={(e) => handleItemChange(index, e.target.value)}\r\n                    className=\"form-input\"\r\n                />\r\n            ))}\r\n            <button type=\"button\" onClick={handleAddItem} className=\"form-button\">Add Item</button>\r\n            {images.map((image, index) => (\r\n                <input\r\n                    key={index}\r\n                    type=\"text\"\r\n                    placeholder=\"Image URL\"\r\n                    value={image}\r\n                    onChange={(e) => handleImageChange(index, e.target.value)}\r\n                    className=\"form-input\"\r\n                />\r\n            ))}\r\n            <button type=\"button\" onClick={handleAddImage} className=\"form-button\">Add Image</button>\r\n            {/* Combo box para seleccionar la colección */}\r\n            <select value={selectedCollection} onChange={handleCollectionChange} className=\"form-input\">\r\n                <option value=\"\">Select Collection</option>\r\n                {collections.map(collection => (\r\n                    <option key={collection._id} value={collection._id}>{collection.name}</option>\r\n                ))}\r\n            </select>\r\n            <button type=\"submit\" className=\"note-save-button\">Save Note</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NoteForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAO,wBAAwB,CAAC,CAAC;;AAEjC,SAASC,QAAQA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACZ;IACAgB,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,cAAc,CAAC;MAChDL,cAAc,CAACI,QAAQ,CAACE,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxBb,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,EAAE,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMe,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACvC,MAAMC,QAAQ,GAAG,CAAC,GAAGlB,KAAK,CAAC;IAC3BkB,QAAQ,CAACF,KAAK,CAAC,GAAGC,KAAK;IACvBhB,QAAQ,CAACiB,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBhB,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE,EAAE,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMkB,iBAAiB,GAAGA,CAACJ,KAAK,EAAEC,KAAK,KAAK;IACxC,MAAMI,SAAS,GAAG,CAAC,GAAGnB,MAAM,CAAC;IAC7BmB,SAAS,CAACL,KAAK,CAAC,GAAGC,KAAK;IACxBd,SAAS,CAACkB,SAAS,CAAC;EACxB,CAAC;EAED,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACtChB,qBAAqB,CAACgB,KAAK,CAACC,MAAM,CAACP,KAAK,CAAC;EAC7C,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMlB,QAAQ,GAAG,MAAMhB,KAAK,CAACmC,IAAI,CAAC,QAAQ,EAAE;QACxChC,KAAK;QACLE,OAAO;QACPE,KAAK,EAAEA,KAAK,CAAC6B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;QAC/C7B,MAAM,EAAEA,MAAM,CAAC2B,MAAM,CAACG,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;QACnDE,UAAU,EAAE3B,kBAAkB,CAAC;MACnC,CAAC,CAAC;MACFO,OAAO,CAACqB,GAAG,CAAC,eAAe,EAAEzB,QAAQ,CAACE,IAAI,CAAC;MAC3ChB,WAAW,CAACc,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC5B;MACAd,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MACdE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MACfI,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IAC9D;EACJ,CAAC;EAED,oBACIrB,KAAA,CAAA6C,aAAA;IAAMC,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAEZ,YAAa;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/CrD,KAAA,CAAA6C,aAAA;IACIS,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,QAAQ;IACpB5B,KAAK,EAAErB,KAAM;IACbkD,QAAQ,EAAGpB,CAAC,IAAK7B,QAAQ,CAAC6B,CAAC,CAACF,MAAM,CAACP,KAAK,CAAE;IAC1CmB,SAAS,EAAC,YAAY;IACtBW,QAAQ;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACX,CAAC,eACFrD,KAAA,CAAA6C,aAAA;IACIU,WAAW,EAAC,SAAS;IACrB5B,KAAK,EAAEnB,OAAQ;IACfgD,QAAQ,EAAGpB,CAAC,IAAK3B,UAAU,CAAC2B,CAAC,CAACF,MAAM,CAACP,KAAK,CAAE;IAC5CmB,SAAS,EAAC,YAAY;IACtBW,QAAQ;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACX,CAAC,EACD3C,KAAK,CAACgD,GAAG,CAAC,CAAClB,IAAI,EAAEd,KAAK,kBACnB1B,KAAA,CAAA6C,aAAA;IACIc,GAAG,EAAEjC,KAAM;IACX4B,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,MAAM;IAClB5B,KAAK,EAAEa,IAAK;IACZgB,QAAQ,EAAGpB,CAAC,IAAKX,gBAAgB,CAACC,KAAK,EAAEU,CAAC,CAACF,MAAM,CAACP,KAAK,CAAE;IACzDmB,SAAS,EAAC,YAAY;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzB,CACJ,CAAC,eACFrD,KAAA,CAAA6C,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAACM,OAAO,EAAEpC,aAAc;IAACsB,SAAS,EAAC,aAAa;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAAC,EACtFzC,MAAM,CAAC8C,GAAG,CAAC,CAAChB,KAAK,EAAEhB,KAAK,kBACrB1B,KAAA,CAAA6C,aAAA;IACIc,GAAG,EAAEjC,KAAM;IACX4B,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,WAAW;IACvB5B,KAAK,EAAEe,KAAM;IACbc,QAAQ,EAAGpB,CAAC,IAAKN,iBAAiB,CAACJ,KAAK,EAAEU,CAAC,CAACF,MAAM,CAACP,KAAK,CAAE;IAC1DmB,SAAS,EAAC,YAAY;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzB,CACJ,CAAC,eACFrD,KAAA,CAAA6C,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAACM,OAAO,EAAE/B,cAAe;IAACiB,SAAS,EAAC,aAAa;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CAAC,eAEzFrD,KAAA,CAAA6C,aAAA;IAAQlB,KAAK,EAAEX,kBAAmB;IAACwC,QAAQ,EAAExB,sBAAuB;IAACc,SAAS,EAAC,YAAY;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvFrD,KAAA,CAAA6C,aAAA;IAAQlB,KAAK,EAAC,EAAE;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAyB,CAAC,EAC1CvC,WAAW,CAAC4C,GAAG,CAACf,UAAU,iBACvB3C,KAAA,CAAA6C,aAAA;IAAQc,GAAG,EAAEhB,UAAU,CAACkB,GAAI;IAAClC,KAAK,EAAEgB,UAAU,CAACkB,GAAI;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEV,UAAU,CAACmB,IAAa,CAChF,CACG,CAAC,eACT9D,KAAA,CAAA6C,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAACR,SAAS,EAAC,kBAAkB;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CAClE,CAAC;AAEf;AAEA,eAAejD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}