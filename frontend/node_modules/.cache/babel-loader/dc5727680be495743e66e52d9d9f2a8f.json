{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\GitHub\\\\DSW_EXTRA\\\\frontend\\\\src\\\\components\\\\NotesList.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from '../axiosConfig'; // Asegúrate de importar tu configuración personalizada de Axios\nimport Note from './Note';\nimport NoteForm from './NoteForm';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCog, faFolder, faUserFriends } from '@fortawesome/free-solid-svg-icons'; // Importa el icono de la carpeta\n\nimport '../styles/App.css';\nimport '../styles/Note.css';\nfunction NotesList() {\n  const [notes, setNotes] = useState([]);\n  const [allUsersNotes, setAllUsersNotes] = useState([]); // Nuevo estado para almacenar todas las notas de usuarios no admin\n  const [isAdmin, setIsAdmin] = useState(false); // Nuevo estado para verificar si el usuario es admin\n\n  const fetchNotes = () => {\n    axios.get('/notes/user').then(response => setNotes(response.data)).catch(error => console.error('Error fetching notes:', error));\n  };\n\n  // Función para obtener las notas de todos los usuarios no admin\n  const fetchAllUsersNotes = () => {\n    axios.get('/notes').then(response => setAllUsersNotes(response.data)).catch(error => console.error('Error fetching all user notes:', error));\n  };\n  const handleNoteAdded = newNote => {\n    setNotes(prevNotes => [...prevNotes, newNote]);\n  };\n  const addNote = note => {\n    axios.post('/notes', note).then(response => {\n      console.log('Note added successfully:', response.data);\n      // Asegurarse de que la respuesta del servidor contiene los datos correctos\n      if (response.data && response.status === 201) {\n        // Método 1: Agregar la nueva nota al estado\n        setNotes(prevNotes => [...prevNotes, response.data]);\n      } else {\n        throw new Error('Invalid server response');\n      }\n    }).catch(error => {\n      console.error('Error adding note:', error);\n    });\n  };\n  const updateNote = (id, updatedNote) => {\n    axios.put(`/notes/${id}`, updatedNote).then(response => {\n      console.log(\"Respuesta después de actualizar:\", response.data);\n      // Aquí actualizamos el estado con la nota actualizada\n      setNotes(prevNotes => prevNotes.map(note => note._id === id ? {\n        ...note,\n        ...response.data\n      } : note));\n    }).catch(error => {\n      console.error('Error al actualizar la nota:', error);\n    });\n  };\n  const deleteNote = id => {\n    axios.delete(`/notes/${id}`).then(() => {\n      fetchNotes(); // Recargar las notas después de eliminar\n    }).catch(error => console.error('Error deleting note:', error));\n  };\n  useEffect(() => {\n    fetchNotes();\n    const role = localStorage.getItem('role'); // Obtiene el rol del usuario desde localStorage\n    console.log('Rol recuperado desde localStorage:', role); // Log para verificar el rol recuperado\n\n    if (role === 'Admin') {\n      setIsAdmin(true); // Establece isAdmin a true si el usuario es administrador\n      fetchAllUsersNotes(); // Llama a la función para obtener todas las notas si el usuario es admin\n    } else {\n      setIsAdmin(false); // Establece isAdmin a false si el usuario no es admin\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-management-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/manage-users\",\n    className: \"note-management-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUserCog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), \" User Management\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/collection\",\n    className: \"note-management-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), \" Collection\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    className: \"note-management-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUserFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), \" Friends\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Create Note\"), /*#__PURE__*/React.createElement(NoteForm, {\n    addNote: addNote,\n    onNoteAdded: handleNoteAdded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes-flex-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"  \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"My Notes\"), notes.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note._id,\n    note: note,\n    deleteNote: () => deleteNote(note._id),\n    updateNote: updateNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }))), isAdmin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"users-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Users Notes\"), allUsersNotes.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note._id,\n    note: note,\n    deleteNote: () => deleteNote(note._id),\n    updateNote: updateNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })))));\n}\n;\nexport default NotesList;","map":{"version":3,"names":["React","useEffect","useState","axios","Note","NoteForm","Link","FontAwesomeIcon","faUserCog","faFolder","faUserFriends","NotesList","notes","setNotes","allUsersNotes","setAllUsersNotes","isAdmin","setIsAdmin","fetchNotes","get","then","response","data","catch","error","console","fetchAllUsersNotes","handleNoteAdded","newNote","prevNotes","addNote","note","post","log","status","Error","updateNote","id","updatedNote","put","map","_id","deleteNote","delete","role","localStorage","getItem","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","to","icon","onNoteAdded","key"],"sources":["C:/Users/victo/Documents/GitHub/DSW_EXTRA/frontend/src/components/NotesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../axiosConfig';  // Asegúrate de importar tu configuración personalizada de Axios\r\nimport Note from './Note';\r\nimport NoteForm from './NoteForm';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCog, faFolder, faUserFriends } from '@fortawesome/free-solid-svg-icons';  // Importa el icono de la carpeta\r\n\r\nimport '../styles/App.css';\r\nimport '../styles/Note.css';\r\n\r\nfunction NotesList() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [allUsersNotes, setAllUsersNotes] = useState([]);  // Nuevo estado para almacenar todas las notas de usuarios no admin\r\n  const [isAdmin, setIsAdmin] = useState(false);  // Nuevo estado para verificar si el usuario es admin\r\n\r\n  const fetchNotes = () => {\r\n    axios.get('/notes/user')\r\n      .then(response => setNotes(response.data))\r\n      .catch(error => console.error('Error fetching notes:', error));\r\n  };\r\n\r\n  // Función para obtener las notas de todos los usuarios no admin\r\n  const fetchAllUsersNotes = () => {\r\n    axios.get('/notes')\r\n      .then(response => setAllUsersNotes(response.data))\r\n      .catch(error => console.error('Error fetching all user notes:', error));\r\n  };\r\n\r\n  const handleNoteAdded = (newNote) => {\r\n    setNotes(prevNotes => [...prevNotes, newNote]);\r\n  };\r\n\r\n  const addNote = (note) => {\r\n    axios.post('/notes', note)\r\n      .then(response => {\r\n        console.log('Note added successfully:', response.data);\r\n        // Asegurarse de que la respuesta del servidor contiene los datos correctos\r\n        if (response.data && response.status === 201) {\r\n          // Método 1: Agregar la nueva nota al estado\r\n          setNotes(prevNotes => [...prevNotes, response.data]);\r\n        } else {\r\n          throw new Error('Invalid server response');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error adding note:', error);\r\n      });\r\n  };\r\n\r\n  const updateNote = (id, updatedNote) => {\r\n    axios.put(`/notes/${id}`, updatedNote)\r\n      .then(response => {\r\n        console.log(\"Respuesta después de actualizar:\", response.data);\r\n        // Aquí actualizamos el estado con la nota actualizada\r\n        setNotes(prevNotes => prevNotes.map(note => note._id === id ? { ...note, ...response.data } : note));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error al actualizar la nota:', error);\r\n      });\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    axios.delete(`/notes/${id}`)\r\n      .then(() => {\r\n        fetchNotes(); // Recargar las notas después de eliminar\r\n      })\r\n      .catch(error => console.error('Error deleting note:', error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n    const role = localStorage.getItem('role');  // Obtiene el rol del usuario desde localStorage\r\n    console.log('Rol recuperado desde localStorage:', role);  // Log para verificar el rol recuperado\r\n\r\n    if (role === 'Admin') {\r\n      setIsAdmin(true);  // Establece isAdmin a true si el usuario es administrador\r\n      fetchAllUsersNotes();  // Llama a la función para obtener todas las notas si el usuario es admin\r\n    } else {\r\n      setIsAdmin(false);  // Establece isAdmin a false si el usuario no es admin\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"note-management-links\">\r\n        <Link to=\"/manage-users\" className=\"note-management-button\">\r\n          <FontAwesomeIcon icon={faUserCog} /> User Management\r\n        </Link>\r\n        <Link to=\"/collection\" className=\"note-management-button\">\r\n          <FontAwesomeIcon icon={faFolder} /> Collection\r\n        </Link>\r\n        <Link to=\"/register\" className=\"note-management-button\">\r\n          <FontAwesomeIcon icon={faUserFriends} /> Friends\r\n        </Link>\r\n      </div>\r\n      <h1>Create Note</h1>\r\n      <NoteForm addNote={addNote} onNoteAdded={handleNoteAdded} />\r\n      <div className=\"notes-flex-container\">  {/* Añadida esta nueva clase */}\r\n        <div className=\"my-notes\">\r\n          <h1>My Notes</h1>\r\n          {notes.map(note => (\r\n            <Note\r\n              key={note._id}\r\n              note={note}\r\n              deleteNote={() => deleteNote(note._id)}\r\n              updateNote={updateNote}\r\n            />\r\n          ))}\r\n        </div>\r\n        {isAdmin && (\r\n          <div className=\"users-notes\">\r\n            <h1>Users Notes</h1>\r\n            {allUsersNotes.map(note => (\r\n              <Note\r\n                key={note._id}\r\n                note={note}\r\n                deleteNote={() => deleteNote(note._id)}\r\n                updateNote={updateNote}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}